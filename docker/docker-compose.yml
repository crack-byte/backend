version: '3.7'

services:
  db:
    image: postgres
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: tripshare
      POSTGRES_USER: tripshare
      POSTGRES_DB: tripshare
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - mynetwork
  redis:
    image: redis:latest
    container_name: tripshare-redis
    command: redis-server --maxmemory 200mb --maxmemory-policy allkeys-lfu
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mynetwork
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - mynetwork
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.8
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - mynetwork
  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.8
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - XPACK_MONITORING_ENABLED=false
    ports:
      - "5000:5000"
    networks:
      - mynetwork
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#    volumes:
#      - /data:/data
#    networks:
#      - mynetwork
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "test:1:1"
#    volumes:
#      - /kafka/data:/kafka/data
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - zookeeper
#    networks:
#      - mynetwork
networks:
  mynetwork:
    driver: bridge
volumes:
  db-data:
  data:
  redis-data:
  elastic-data:
